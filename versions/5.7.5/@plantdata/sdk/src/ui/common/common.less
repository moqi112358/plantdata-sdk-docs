@import "../../define/index";

@arrow-cls: ~"@{css-prefix}arrow";
@divider-cls: ~"@{css-prefix}divider";

.@{divider-cls} {
  border-top: @divider-default;
}

.arrow(@color: white; @arrow-size:8px; @index: 1060) {
  @arrow-position-att: ~"data-@{arrow-cls}-position";
  .@{arrow-cls}-container {
    .transition() {
      @transition: opacity @transition-duration @transition-timing, transform @transition-duration @transition-timing;
      transition: @transition;
    }
    position: absolute;
    z-index: @index;
    display: block;
    visibility: visible;
    opacity: 0;
    pointer-events: none;
    .transform(scale(0));
    .transition;

    .@{arrow-cls}-content {
      .@{arrow-cls} {
        position: absolute;
        width: 0;
        height: 0;
        border: @arrow-size solid transparent;
      }
    }

    &.active {
      opacity: 1;
      .transform(scale(1));
      pointer-events: all;
    }

    @gutter: 8px;
    @side-offsetH: 16px;
    @side-offsetV: 8px;
    @oh: @side-offsetH + @arrow-size;
    @ov: @side-offsetV + @arrow-size;
    .arrow-position(@side, @paddingSide) {
      padding-@{paddingSide}: @gutter;
      .@{arrow-cls} {
          @{paddingSide}: @gutter - @arrow-size;
        border-@{paddingSide}-width: 0;
        border-@{side}-color: @color;
      }
    }

    &[@{arrow-position-att}="top"] {
      transform-origin: 50% 100%;
      .arrow-position(top, bottom);

      .@{arrow-cls} {
        left: 50%;
        margin-left: -@arrow-size;
      }
    }

    &[@{arrow-position-att}="topLeft"] {
      transform-origin: @oh 100%;
      .arrow-position(top, bottom);

      .@{arrow-cls} {
        left: @side-offsetH;
      }
    }

    &[@{arrow-position-att}="topRight"] {
      transform-origin: calc(~"100% - @{oh}") 100%;
      .arrow-position(top, bottom);

      .@{arrow-cls} {
        right: @side-offsetH;
      }
    }

    &[@{arrow-position-att}="right"] {
      transform-origin: 0 50%;
      .arrow-position(right, left);

      .@{arrow-cls} {
        top: 50%;
        margin-top: -@arrow-size;
      }
    }

    &[@{arrow-position-att}="rightTop"] {
      transform-origin: 0 @ov;
      .arrow-position(right, left);

      .@{arrow-cls} {
        top: @side-offsetV;
      }
    }

    &[@{arrow-position-att}="rightBottom"] {
      transform-origin: 0 calc(~"100% - @{ov}");
      .arrow-position(right, left);

      .@{arrow-cls} {
        bottom: @side-offsetV;
      }
    }

    &[@{arrow-position-att}="bottom"] {
      transform-origin: 50% 0;
      .arrow-position(bottom, top);

      .@{arrow-cls} {
        left: 50%;
        margin-left: -@arrow-size;
      }
    }

    &[@{arrow-position-att}="bottomLeft"] {
      transform-origin: @oh 0;
      .arrow-position(bottom, top);

      .@{arrow-cls} {
        left: @side-offsetH;
      }
    }

    &[@{arrow-position-att}="bottomRight"] {
      transform-origin: calc(~"100% - @{oh}") 0;
      .arrow-position(bottom, top);

      .@{arrow-cls} {
        right: @side-offsetH;
      }
    }

    &[@{arrow-position-att}="left"] {
      transform-origin: 100% 50%;
      .arrow-position(left, right);

      .@{arrow-cls} {
        top: 50%;
        margin-top: -@arrow-size;
      }
    }

    &[@{arrow-position-att}="leftTop"] {
      transform-origin: 100% @ov;
      .arrow-position(left, right);

      .@{arrow-cls} {
        top: @side-offsetV;
      }
    }

    &[@{arrow-position-att}="leftBottom"] {
      transform-origin: 100% calc(~"100% - @{ov}");
      .arrow-position(left, right);

      .@{arrow-cls} {
        bottom: @side-offsetV;
      }
    }
  }
}

.arrow();
